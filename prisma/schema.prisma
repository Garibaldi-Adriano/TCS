generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model Categoria {
  id           Int      @id @default(autoincrement())
  tipo         String
  valorLocacao Float
  modelos      Modelo[]
}

model Marca {
  id       Int       @id @default(autoincrement())
  nome     String
  modelos  Modelo[]
  veiculos Veiculo[]
}

model Modelo {
  id          Int       @id @default(autoincrement())
  nome        String
  anoModelo   Int
  qtModelo    Int
  marcaId     Int
  categoriaId Int
  categoria   Categoria @relation(fields: [categoriaId], references: [id], onDelete: Restrict)
  marca       Marca     @relation(fields: [marcaId], references: [id], onDelete: Restrict)
  veiculos    Veiculo[]
}

model Veiculo {
  id            Int               @id @default(autoincrement())
  placa         String            @unique
  chassi        String            @unique
  anoFabricacao Int
  cor           String
  marcaId       Int
  modeloId      Int
  status        String
  manutencao    Manutencao[]
  modelo        Modelo            @relation(fields: [modeloId], references: [id], onDelete: Restrict)
  marca         Marca             @relation(fields: [marcaId], references: [id], onDelete: Restrict)
  contratos     VeiculoContrato[]
}

model ContratoLocacao {
  id            Int               @id @default(autoincrement())
  dataLocacao   DateTime
  dataDevolucao DateTime
  valorCaucao   Float
  valorTotal    Float
  status        String
  ocorrencias   Ocorrencia[]
  pagamento     Pagamento[]
  veiculos      VeiculoContrato[]
  clientes      ClienteContrato[]
}

model VeiculoContrato {
  veiculo       Veiculo          @relation(fields: [veiculoId], references: [id])
  veiculoId     Int
  contrato      ContratoLocacao  @relation(fields: [contratoId], references: [id])
  contratoId    Int

  @@id([veiculoId, contratoId])
}
model Manutencao {
  id              Int      @id @default(autoincrement())
  descricao       String
  dataManutencao  DateTime
  valorManutencao Float
  veiculoId       Int
  veiculo         Veiculo  @relation(fields: [veiculoId], references: [id], onDelete: Restrict)
}

model Ocorrencia {
  id                Int             @id @default(autoincrement())
  descricao         String
  dataOcorrencia    DateTime
  valorOcorrencia   Float
  contratoId        Int
  contrato          ContratoLocacao @relation(fields: [contratoId], references: [id], onDelete: Restrict)
}

model Pagamento {
  id             Int             @id @default(autoincrement())
  data           DateTime
  valorPago      Float
  formaPagamento String
  contratoId     Int
  contrato       ContratoLocacao @relation(fields: [contratoId], references: [id], onDelete: Restrict)
}

model Cliente {
  id            Int      @id @default(autoincrement())
  nomeCompleto  String
  cpf           String   @unique
  email         String   @unique
  telefone      String
  cep           String
  endereco      String
  numero        String
  complemento   String?
  bairro        String
  cidade        String
  estado        String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  contratos     ClienteContrato[]
}

model ClienteContrato {
  cliente   Cliente          @relation(fields: [clienteId], references: [id])
  clienteId Int
  contrato  ContratoLocacao  @relation(fields: [contratoId], references: [id])
  contratoId Int
  @@id([clienteId, contratoId])
}